name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform Resource Creation and Deploy App"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.17.1"
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1 # Specify your Terraform version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Terraform Init
        working-directory: ./terraform # Ensure you're in the correct directory
        run: terraform init

      - name: Terraform plan
        working-directory: ./terraform # Ensure you're in the correct directory
        run: terraform plan

      - name: Apply Terraform configuration
        working-directory: ./terraform # Ensure you're in the correct directory
        run: terraform apply -var-file="dev.tfvars" -auto-approve

      - name: Extract CloudFront distribution ID
        working-directory: ./terraform
        id: extract_cloudfront_id
        run: echo "::set-output name=distribution_id::$(terraform output -raw cloudfront_distribution_id)"

      - name: Upload build to S3
        run: aws s3 sync ./dist s3://my-react-bucket --delete # Added --delete flag

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.extract_cloudfront_id.outputs.distribution_id }} --paths "/*"
